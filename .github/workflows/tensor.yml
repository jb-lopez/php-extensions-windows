name: "Tensor"
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "27 9 * * 4"
jobs:
  build:
    name: Build
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        version: ["8.0", "8.1"] # Tensor is not yet compatible with 8.2
        ts: ["ts", "nts"]
        arch: ["x64"]
        name: ["tensor"]
        repo: ["RubixML/Tensor"]
        enable: ["enable-tensor"]
        include:
          - ts: "ts"
            release: "Release_TS"
          - ts: "nts"
            release: "Release"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup PHP
        id: setup-php
        uses: cmb69/setup-php-sdk@v0.7
        with:
          version: ${{matrix.version}}
          arch: ${{matrix.arch}}
          ts: ${{matrix.ts}}
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{matrix.arch}}
          toolset: ${{steps.setup-php.outputs.toolset}}
      - name: Get Extension Source
        run: |
          git clone https://github.com/${{matrix.repo}} \projects\tensor
      - name: Download OpenBLAS
        run: |
          curl -LO https://github.com/xianyi/OpenBLAS/releases/download/v0.3.21/OpenBLAS-0.3.21-x64.zip
          7z x OpenBLAS-0.3.21-x64.zip -o"\projects\tensor\deps"
          copy \projects\tensor\deps\bin\libopenblas.dll \projects\tensor\deps\lib\libopenblas.dll
      - name: Fixes for PHP
        shell: pwsh
        run: |
          $lapack_file = "\projects\tensor\deps\include\lapack.h"
          (Get-content $lapack_file) | Foreach-Object {$_ -replace "float _Complex", "_C_float_complex"} | Set-Content $lapack_file
          (Get-content $lapack_file) | Foreach-Object {$_ -replace "double _Complex", "_C_double_complex"} | Set-Content $lapack_file
      - name: Configure Extension
        run: |
          cd \projects\tensor\ext
          phpize
          ./configure --${{matrix.enable}} --with-prefix=${{steps.setup-php-sdk.outputs.prefix}}
      - name: More Fixes for PHP
        shell: pwsh
        run: |
          $makefile_file = "\projects\tensor\ext\Makefile"
          (Get-content $makefile_file) | Foreach-Object {$_ -replace "bcrypt.lib", "bcrypt.lib \projects\tensor\deps\lib\libopenblas.lib \projects\tensor\deps\lib\libopenblas.dll.a"} | Set-Content $makefile_file
      - name: Build Extension
        run: |
          cd \projects\tensor\ext
          nmake
      - name: Package Extension
        run: |
          md .install
          copy \projects\tensor\ext\${{matrix.arch}}\${{matrix.release}}\php_${{matrix.name}}.dll .install\php${{matrix.version}}_${{matrix.ts}}_${{matrix.arch}}_${{matrix.name}}.dll
          copy ..\deps\bin\* .install
      - name: Upload Extension
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.name}}-${{matrix.version}}-${{matrix.ts}}-${{matrix.arch}}
          path: .install
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - run: mkdir ext
      - uses: actions/download-artifact@v3
        name: Download Artifacts
        with:
          path: ext
      - name: Release
        run: |
          set -x
          assets=()
          for asset in ./ext/*/*.dll; do
            assets+=("$asset")
          done
          if ! gh release view Tensor; then
            gh release create "Tensor" "${assets[@]}" -t "Tensor" -n "Tensor"
          else
            gh release upload "Tensor" "${assets[@]}" --clobber
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
