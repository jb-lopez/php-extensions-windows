name: 'X-Debug'
on:
  workflow_dispatch:
jobs:
  build:
    name: build
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.0', '8.1', '8.2', '8.3' ]
        ts: [ ts, nts ]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: build
        # script parameters $extension $repo $branch $dev_branch $args $sdk_version $vs $arch $ts $php
        run: |
          pwsh scripts/builder.ps1 xdebug xdebug/xdebug master xdebug_3_2 with-xdebug master vs16 x64 ${{ matrix.ts }} ${{ matrix.php }}
          $exit_code = $?
          if(-not($exit_code)) {
            exit $exit_code
          }
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.extensions }}_${{ matrix.ts }}_${{ matrix.arch }}
          path: ${{ matrix.extensions }}
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - run: mkdir ext
      - uses: actions/download-artifact@v2
        with:
          path: ext
      - name: Release
        run: |
          set -x
          assets=()
          for asset in ./ext/*/*.dll; do
            assets+=("$asset")
          done
          if ! gh release view xDebug; then
            gh release create "xDebug" "${assets[@]}" -t "xDebug" -n "xDebug"
          else
            gh release upload "xDebug" "${assets[@]}" --clobber
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
